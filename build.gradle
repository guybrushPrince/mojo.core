apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'
mainClassName = "de.jena.uni.mojo.Mojo"

jar {
	manifest {
		attributes 	'Implementation-Title': 'Mojo Core',
					'Implementation-Version': version,
					'Main-Class': 'de.jena.uni.mojo.Mojo'
	}
}

task fatJar(type: Jar) {
	manifest {
		attributes 	'Implementation-Title': 'Mojo Core',
					'Implementation-Version': version,
					'Main-Class': 'de.jena.uni.mojo.Mojo'
	}
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    jcenter()
	mavenCentral()
	flatDir {
		dirs 'libs'
	}
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.5.0'
	//compile 'org.reflections:reflections:0.9.5-RC2'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
	compile 'org.apache.logging.log4j:log4j-core:2.7'
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    testCompile 'junit:junit:4.12'
	//testCompile 'org.reflections:reflections:0.9.5-RC2'
	testCompile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
}

configurations {
    compile
}

javadoc {
	source = sourceSets.main.allJava
	classpath = configurations.compile
}

run {
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}